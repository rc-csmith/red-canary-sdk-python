Python Library Documentation: class AuditLog in module rcapi.models.audit_log

class AuditLog(rcapi.models.common.SelectableObject)
 |  AuditLog(entry=None, client=None)
 |  
 |  Audit Log object
 |  
 |  Method resolution order:
 |      AuditLog
 |      rcapi.models.common.SelectableObject
 |      rcapi.models.common.BaseObject
 |      rcapi.models.common.FinishedObject
 |      builtins.object
 |  
 |  Methods defined here:
 |  
 |  __init__(self, entry=None, client=None)
 |      Initialize self.  See help(type(self)) for accurate signature.
 |  
 |  get_item(self, unique_id: str)
 |      Get a single audit log
 |      
 |      Parameters
 |      ----------
 |      unique_id : str
 |        unique id for the audit log
 |      
 |      Returns
 |      -------
 |      An AuditLog object
 |  
 |  get_list(self)
 |      Get a list of audit logs
 |      
 |      Parameters
 |      ----------
 |      None
 |      
 |      Returns
 |      -------
 |      A list of AuditLog objects
 |  
 |  ----------------------------------------------------------------------
 |  Methods inherited from rcapi.models.common.FinishedObject:
 |  
 |  to_json(self)
 |      Return data in json format
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors inherited from rcapi.models.common.FinishedObject:
 |  
 |  __dict__
 |      dictionary for instance variables (if defined)
 |  
 |  __weakref__
 |      list of weak references to the object (if defined)


Python Library Documentation: class AuditLogService in module rcapi.models.audit_log

class AuditLogService(builtins.object)
 |  AuditLogService(client)
 |  
 |  Audit Log Service class
 |  
 |  Methods defined here:
 |  
 |  __init__(self, client)
 |      Initialize self.  See help(type(self)) for accurate signature.
 |  
 |  download(self, search_string: str = '') -> rcapi.models.general.RequestedCsvResponse
 |      Download audit logs to CSV
 |      
 |      Parameters
 |      ----------
 |      search_string : str
 |        query string to filter audit logs
 |      
 |      Returns
 |      -------
 |      RequestedCsvResponse object
 |  
 |  get(self, audit_log_id: int) -> rcapi.models.audit_log.AuditLog
 |      Get a single audit log
 |      
 |      Parameters
 |      ----------
 |      id : int
 |        audit log id
 |      
 |      Returns
 |      -------
 |      An AuditLog object
 |  
 |  list_entries(self, actions: str = '', count_mode: bool = False) -> Union[int, list[rcapi.models.audit_log.AuditLog]]
 |      List audit logs
 |      
 |      Parameters
 |      ----------
 |      actions : str
 |        audit actions for search/filter
 |      count_mode : bool
 |        show only a count and omit result details
 |      
 |      Returns
 |      -------
 |      A list of AuditLog objects or an integer count
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors defined here:
 |  
 |  __dict__
 |      dictionary for instance variables (if defined)
 |  
 |  __weakref__
 |      list of weak references to the object (if defined)


Python Library Documentation: class PortalUser in module rcapi.models.general

class PortalUser(rcapi.models.common.BaseObject)
 |  PortalUser(entry, type_mapping={})
 |  
 |  Portal User object
 |  
 |  Method resolution order:
 |      PortalUser
 |      rcapi.models.common.BaseObject
 |      rcapi.models.common.FinishedObject
 |      builtins.object
 |  
 |  Methods inherited from rcapi.models.common.BaseObject:
 |  
 |  __init__(self, entry, type_mapping={})
 |      Initialize self.  See help(type(self)) for accurate signature.
 |  
 |  ----------------------------------------------------------------------
 |  Methods inherited from rcapi.models.common.FinishedObject:
 |  
 |  to_json(self)
 |      Return data in json format
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors inherited from rcapi.models.common.FinishedObject:
 |  
 |  __dict__
 |      dictionary for instance variables (if defined)
 |  
 |  __weakref__
 |      list of weak references to the object (if defined)


Python Library Documentation: class RequestedCsvResponse in module rcapi.models.general

class RequestedCsvResponse(rcapi.models.common.BaseObject)
 |  RequestedCsvResponse(entry, type_mapping={})
 |  
 |  REquested CSV Response object
 |  
 |  Method resolution order:
 |      RequestedCsvResponse
 |      rcapi.models.common.BaseObject
 |      rcapi.models.common.FinishedObject
 |      builtins.object
 |  
 |  Methods inherited from rcapi.models.common.BaseObject:
 |  
 |  __init__(self, entry, type_mapping={})
 |      Initialize self.  See help(type(self)) for accurate signature.
 |  
 |  ----------------------------------------------------------------------
 |  Methods inherited from rcapi.models.common.FinishedObject:
 |  
 |  to_json(self)
 |      Return data in json format
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors inherited from rcapi.models.common.FinishedObject:
 |  
 |  __dict__
 |      dictionary for instance variables (if defined)
 |  
 |  __weakref__
 |      list of weak references to the object (if defined)


Python Library Documentation: class SelectableObject in module rcapi.models.common

class SelectableObject(BaseObject)
 |  SelectableObject(entry, type_mapping={})
 |  
 |  A SelectableObject is a BaseObject with the ability to select a specific object from the API.
 |  
 |  Objects of this type can be called directly by the user.
 |  
 |  Method resolution order:
 |      SelectableObject
 |      BaseObject
 |      FinishedObject
 |      builtins.object
 |  
 |  Methods defined here:
 |  
 |  __init__(self, entry, type_mapping={})
 |      Initialize self.  See help(type(self)) for accurate signature.
 |  
 |  ----------------------------------------------------------------------
 |  Methods inherited from FinishedObject:
 |  
 |  to_json(self)
 |      Return data in json format
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors inherited from FinishedObject:
 |  
 |  __dict__
 |      dictionary for instance variables (if defined)
 |  
 |  __weakref__
 |      list of weak references to the object (if defined)


Python Library Documentation: _SpecialForm in module typing

typing.Union
    Union type; Union[X, Y] means either X or Y.
    
    To define a union, use e.g. Union[int, str].  Details:
    - The arguments must be types and there must be at least one.
    - None as an argument is a special case and is replaced by
      type(None).
    - Unions of unions are flattened, e.g.::
    
        Union[Union[int, str], float] == Union[int, str, float]
    
    - Unions of a single argument vanish, e.g.::
    
        Union[int] == int  # The constructor actually returns int
    
    - Redundant arguments are skipped, e.g.::
    
        Union[int, str, int] == Union[int, str]
    
    - When comparing unions, the argument order is ignored, e.g.::
    
        Union[int, str] == Union[str, int]
    
    - You cannot subclass or instantiate a union.
    - You can use Optional[X] as a shorthand for Union[X, None].


