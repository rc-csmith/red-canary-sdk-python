Python Library Documentation: class ActionExecution in module rcapi.models.exec

class ActionExecution(rcapi.models.common.BaseObject)
 |  ActionExecution(entry)
 |  
 |  Action Execution object
 |  Includes PlaybookAction, PortalUser, PlaybookExecution, and Playbook
 |  
 |  Method resolution order:
 |      ActionExecution
 |      rcapi.models.common.BaseObject
 |      rcapi.models.common.FinishedObject
 |      builtins.object
 |  
 |  Methods defined here:
 |  
 |  __init__(self, entry)
 |      Initialize self.  See help(type(self)) for accurate signature.
 |  
 |  ----------------------------------------------------------------------
 |  Methods inherited from rcapi.models.common.FinishedObject:
 |  
 |  to_json(self)
 |      Return data in json format
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors inherited from rcapi.models.common.FinishedObject:
 |  
 |  __dict__
 |      dictionary for instance variables (if defined)
 |  
 |  __weakref__
 |      list of weak references to the object (if defined)


Python Library Documentation: class AutomateService in module rcapi.models.exec

class AutomateService(builtins.object)
 |  AutomateService(client)
 |  
 |  AutomateService class
 |  
 |  Methods defined here:
 |  
 |  __init__(self, client)
 |      Initialize self.  See help(type(self)) for accurate signature.
 |  
 |  add_trigger_playbook(self, trigger_id: int, params: dict) -> rcapi.models.exec.Playbook
 |      Attach playbook to trigger
 |      
 |      Parameters
 |      ----------
 |      trigger_id : int
 |        trigger id
 |      params : dict
 |        dictionary containing playbook id and other attributes
 |        required keys: playbook[id]
 |      
 |      Returns
 |      -------
 |      A Playbook object
 |  
 |  approve_action_execution(self, playbook_id: int) -> rcapi.models.exec.ActionExecution
 |      Approve action execution
 |      
 |      Parameters
 |      ----------
 |      playbook_id : int
 |        playbook id
 |      
 |      Returns
 |      -------
 |      An ActionExecution object
 |  
 |  copy_playbook(self, playbook_id: int) -> rcapi.models.exec.Playbook
 |      Make copy of existing playbook
 |      
 |      Parameters
 |      ----------
 |      playbook_id : int
 |        playbook id
 |      
 |      Returns
 |      -------
 |      A Playbook object
 |  
 |  create_on_demand_playbook(self, detection_id: int, indicator_id: list[int], action: list[str]) -> rcapi.models.exec.Playbook
 |      Create on-demand playbook
 |      
 |      Parameters
 |      ----------
 |      detection_id : int
 |        detection id
 |      indicator_id : list[int]
 |        list of indicator ids
 |      action : list[str]
 |        list of actions
 |      
 |      Returns
 |      -------
 |      A Playbook object
 |  
 |  create_playbook(self, name: str = None, description: str = None) -> rcapi.models.exec.Playbook
 |      Create playbook
 |      
 |      Parameters
 |      ----------
 |      name : str
 |        name of playbook
 |      description : str
 |        description of playbook
 |      
 |      Returns
 |      -------
 |      A Playbook object
 |  
 |  create_playbook_action(self, playbook_id: int, params: dict) -> rcapi.models.exec.PlaybookAction
 |      Create action for playbook
 |      
 |      Parameters
 |      ----------
 |      playbook_id : int
 |        playbook id
 |      params : dict
 |        dictionary of action attributes
 |        required keys: action[type]
 |                       action[row_order]
 |      
 |      Returns
 |      -------
 |      A PlaybookAction object
 |  
 |  create_trigger(self, params: dict) -> rcapi.models.exec.Trigger
 |      Create trigger
 |      
 |      Parameters
 |      ----------
 |      params : dict
 |        dictionary containing attributes for trigger
 |        required keys: trigger[trigger]
 |      
 |      Returns
 |      -------
 |      A Trigger object
 |  
 |  create_trigger_condition(self, trigger_id: int, params: dict) -> rcapi.models.exec.TriggerCondition
 |      Create condition for specified trigger
 |      
 |      Parameters
 |      ----------
 |      trigger_id : int
 |        trigger id
 |      params : dict
 |        dictionary containing attributes of condition
 |        required keys: condition[model]
 |                       condition[attribute_name]
 |                       condition[matcher]
 |                       condition[value] OR condition[value][]
 |      
 |      Returns
 |      -------
 |      A TriggerCondition object
 |  
 |  delete_playbook(self, playbook_id: int) -> rcapi.models.exec.Playbook
 |      Delete playbook
 |      
 |      Parameters
 |      ----------
 |      playbook_id : int
 |        playbook id
 |      
 |      Returns
 |      -------
 |      A Playbook object
 |  
 |  delete_playbook_action(self, playbook_id: int, action_id: int) -> Union[rcapi.models.general.StandardErrorResponse, rcapi.models.general.StandardSuccessResponse]
 |      Delete action from playbook
 |      
 |      Parameters
 |      ----------
 |      playbook_id : int
 |        playbook id
 |      action_id : int
 |        action id
 |      
 |      Returns
 |      -------
 |      A StandardSuccessResponse object
 |  
 |  delete_trigger(self, trigger_id: int) -> Union[rcapi.models.general.StandardSuccessResponse, rcapi.models.general.StandardErrorResponse]
 |      Delete trigger
 |      
 |      Parameters
 |      ----------
 |      trigger_id : int
 |        trigger id
 |      
 |      Returns
 |      -------
 |      A StandardSuccessResponse object
 |  
 |  delete_trigger_condition(self, trigger_id: int, condition_id: int) -> Union[rcapi.models.general.StandardSuccessResponse, rcapi.models.general.StandardErrorResponse]
 |      Delete trigger condition
 |      
 |      Parameters
 |      ----------
 |      trigger_id : int
 |        trigger id
 |      condition_id : int
 |        condition id
 |      count_mode : bool
 |        show only a count and omit result details
 |      
 |      Returns
 |      -------
 |      A StandardSuccessResponse object
 |  
 |  deny_action_execution(self, playbook_id: int) -> rcapi.models.exec.ActionExecution
 |      Deny action execution
 |      
 |      Parameters
 |      ----------
 |      playbook_id : int
 |        playbook id
 |      
 |      Returns
 |      -------
 |      An ActionExecution object
 |  
 |  get_action_execution(self, action_execution_id: int, exclude_playbook: bool = False, exclude_playbook_execution: bool = False, exclude_playbook_available_actions: bool = False) -> rcapi.models.exec.ActionExecution
 |      Get action execution
 |      
 |      Parameters
 |      ----------
 |      action_execution_id : int
 |        action execution id
 |      exclude_playbook : bool
 |        exclude playbook
 |      exclude_playbook_execution : bool
 |        exclude playbook execution
 |      exclude_playbook_available_actions : bool
 |        exclude playbook available actions
 |      
 |      Returns
 |      -------
 |      An ActionExecution object
 |  
 |  get_configuration(self) -> rcapi.models.exec.Configuration
 |      Get configuration
 |      
 |      Parameters
 |      ----------
 |      None
 |      
 |      Returns
 |      -------
 |      A Configuration object
 |  
 |  get_playbook_action_runtime_attributes(self, playbook_id: int, action_id: int, runtime_attributes: int) -> dict
 |      Get runtime attributes for playbook action
 |      
 |      Parameters
 |      ----------
 |      playbook_id : int
 |        playbook id
 |      action_id : int
 |        action id
 |      runtime_attributes : int
 |        runtime attributes
 |      
 |      Returns
 |      -------
 |      A dictionary of runtime attributes
 |  
 |  get_playbook_execution(self, playbook_id: int, execution_id: int) -> rcapi.models.exec.PlaybookExecution
 |      Get playbook execution
 |      
 |      Parameters
 |      ----------
 |      playbook_id : int
 |        playbook id
 |      execution_id : int
 |        execution id
 |      
 |      Returns
 |      -------
 |      A PlaybookExecution object
 |  
 |  get_playbook_execution_actions(self, playbook_id: int, execution_id: int) -> list[rcapi.models.exec.ActionExecution]
 |      Get actions for playbook execution
 |      
 |      Parameters
 |      ----------
 |      playbook_id : int
 |        playbook id
 |      execution_id : int
 |        execution id
 |      
 |      Returns
 |      -------
 |      A list of ActionExecution objects
 |  
 |  list_playbook_action_history(self, playbook_id: int) -> rcapi.models.exec.Playbook
 |      List playbook action history
 |      
 |      Parameters
 |      ----------
 |      playbook_id : int
 |        playbook id
 |      
 |      Returns
 |      -------
 |      A Playbook object
 |  
 |  list_playbook_execution(self, playbook_id: int) -> list[rcapi.models.exec.PlaybookExecution]
 |      List playbook executions
 |      
 |      Parameters
 |      ----------
 |      playbook_id : int
 |        playbook id
 |      
 |      Returns
 |      -------
 |      A list of PlaybookExecution objects
 |  
 |  list_playbook_history(self, playbook_id: int) -> rcapi.models.exec.Playbook
 |      List playbook history
 |      
 |      Parameters
 |      ----------
 |      playbook_id : int
 |        playbook id
 |      
 |      Returns
 |      -------
 |      A Playbook object
 |  
 |  list_playbooks(self) -> list[rcapi.models.exec.Playbook]
 |      List all playbooks
 |      
 |      Parameters
 |      ----------
 |      None
 |      
 |      Returns
 |      -------
 |      A list of Playbook objects
 |  
 |  list_trigger_conditions(self, trigger_id: int, count_mode: bool = False) -> Union[int, list[rcapi.models.exec.TriggerCondition]]
 |      List conditions for trigger
 |      
 |      Parameters
 |      ----------
 |      trigger_id : int
 |        trigger id
 |      count_mode : bool
 |        show only a count and omit result details
 |      
 |      Returns
 |      -------
 |      A list of TriggerCondition objects or an integer count
 |  
 |  list_triggers(self, count_mode: bool = False) -> Union[int, list[rcapi.models.exec.Trigger]]
 |      List all triggers
 |      
 |      Parameters
 |      ----------
 |      count_mode : bool
 |        show only a count and omit result details
 |      
 |      Returns
 |      -------
 |      A list of Trigger objects or an integer count
 |  
 |  remove_trigger_playbook(self, playbook_id: int, trigger_id: int) -> Union[rcapi.models.general.StandardSuccessResponse, rcapi.models.general.StandardErrorResponse]
 |      Detach playbook from trigger
 |      
 |      Parameters
 |      ----------
 |      playbook_id : int
 |        playbook id
 |      trigger_id: int
 |        trigger id
 |      
 |      Returns
 |      -------
 |      A StandardSuccessResponse object
 |  
 |  test_json(self, params: Optional[dict] = None) -> rcapi.models.exec.InterpolationResponse
 |      Check if JSON is formatted properly
 |      
 |      Parameters
 |      ----------
 |      params : dict
 |        dictionary containing json string to be tested and accessor
 |        required keys: json_str
 |                       accessor
 |      
 |      Returns
 |      -------
 |      An InterpolationResponse object
 |  
 |  update_playbook(self, playbook_id: int, params: dict) -> rcapi.models.exec.Playbook
 |      Update playbook
 |      
 |      Parameters
 |      ----------
 |      playbook_id : int
 |        playbook id
 |      params : dict
 |        dictionary of playbook attributes
 |        required_keys : playbook[id]
 |      
 |      Returns
 |      -------
 |      A Playbook object
 |  
 |  update_playbook_action(self, playbook_id: int, action_id: int, params: Optional[dict] = None) -> rcapi.models.exec.PlaybookAction
 |      Update action in playbook
 |      
 |      Parameters
 |      ----------
 |      playbook_id : int
 |        playbook id
 |      action_id : int
 |        action id
 |      params : dict
 |        dictionary of attributes for action
 |      
 |      Returns
 |      -------
 |      A PlaybookAction object
 |  
 |  update_trigger(self, trigger_id: int, params: dict) -> rcapi.models.exec.Trigger
 |      Update existing trigger
 |      
 |      Parameters
 |      ----------
 |      trigger_id : int
 |        trigger id
 |      params : dict
 |        dictionary containing details for trigger
 |        required keys: trigger[id]
 |      
 |      Returns
 |      -------
 |      A Trigger object
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors defined here:
 |  
 |  __dict__
 |      dictionary for instance variables (if defined)
 |  
 |  __weakref__
 |      list of weak references to the object (if defined)


Python Library Documentation: class BaseObject in module rcapi.models.common

class BaseObject(FinishedObject)
 |  BaseObject(entry, type_mapping={})
 |  
 |  Formats basic object returned from API into a FinishedObject.
 |  
 |  Objects of this type can be called directly by the user.
 |  
 |  Method resolution order:
 |      BaseObject
 |      FinishedObject
 |      builtins.object
 |  
 |  Methods defined here:
 |  
 |  __init__(self, entry, type_mapping={})
 |      Initialize self.  See help(type(self)) for accurate signature.
 |  
 |  ----------------------------------------------------------------------
 |  Methods inherited from FinishedObject:
 |  
 |  to_json(self)
 |      Return data in json format
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors inherited from FinishedObject:
 |  
 |  __dict__
 |      dictionary for instance variables (if defined)
 |  
 |  __weakref__
 |      list of weak references to the object (if defined)


Python Library Documentation: class Configuration in module rcapi.models.exec

class Configuration(rcapi.models.common.BaseObject)
 |  Configuration(entry, type_mapping={})
 |  
 |  Configuration object
 |  
 |  Method resolution order:
 |      Configuration
 |      rcapi.models.common.BaseObject
 |      rcapi.models.common.FinishedObject
 |      builtins.object
 |  
 |  Methods inherited from rcapi.models.common.BaseObject:
 |  
 |  __init__(self, entry, type_mapping={})
 |      Initialize self.  See help(type(self)) for accurate signature.
 |  
 |  ----------------------------------------------------------------------
 |  Methods inherited from rcapi.models.common.FinishedObject:
 |  
 |  to_json(self)
 |      Return data in json format
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors inherited from rcapi.models.common.FinishedObject:
 |  
 |  __dict__
 |      dictionary for instance variables (if defined)
 |  
 |  __weakref__
 |      list of weak references to the object (if defined)


Python Library Documentation: class Indicator in module rcapi.models.general

class Indicator(rcapi.models.common.BaseObject)
 |  Indicator(entry, type_mapping={})
 |  
 |  Indicator object
 |  
 |  Method resolution order:
 |      Indicator
 |      rcapi.models.common.BaseObject
 |      rcapi.models.common.FinishedObject
 |      builtins.object
 |  
 |  Methods inherited from rcapi.models.common.BaseObject:
 |  
 |  __init__(self, entry, type_mapping={})
 |      Initialize self.  See help(type(self)) for accurate signature.
 |  
 |  ----------------------------------------------------------------------
 |  Methods inherited from rcapi.models.common.FinishedObject:
 |  
 |  to_json(self)
 |      Return data in json format
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors inherited from rcapi.models.common.FinishedObject:
 |  
 |  __dict__
 |      dictionary for instance variables (if defined)
 |  
 |  __weakref__
 |      list of weak references to the object (if defined)


Python Library Documentation: class InterpolationResponse in module rcapi.models.exec

class InterpolationResponse(rcapi.models.common.BaseObject)
 |  InterpolationResponse(entry, type_mapping={})
 |  
 |  Interpolation Response object
 |  
 |  Method resolution order:
 |      InterpolationResponse
 |      rcapi.models.common.BaseObject
 |      rcapi.models.common.FinishedObject
 |      builtins.object
 |  
 |  Methods inherited from rcapi.models.common.BaseObject:
 |  
 |  __init__(self, entry, type_mapping={})
 |      Initialize self.  See help(type(self)) for accurate signature.
 |  
 |  ----------------------------------------------------------------------
 |  Methods inherited from rcapi.models.common.FinishedObject:
 |  
 |  to_json(self)
 |      Return data in json format
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors inherited from rcapi.models.common.FinishedObject:
 |  
 |  __dict__
 |      dictionary for instance variables (if defined)
 |  
 |  __weakref__
 |      list of weak references to the object (if defined)


Python Library Documentation: _SpecialForm in module typing

typing.Optional
    Optional type.
    
    Optional[X] is equivalent to Union[X, None].


Python Library Documentation: class Playbook in module rcapi.models.exec

class Playbook(rcapi.models.common.SelectableObject)
 |  Playbook(entry=None, client=None)
 |  
 |  Playbook object
 |  Includes PlaybookAction
 |  
 |  Method resolution order:
 |      Playbook
 |      rcapi.models.common.SelectableObject
 |      rcapi.models.common.BaseObject
 |      rcapi.models.common.FinishedObject
 |      builtins.object
 |  
 |  Methods defined here:
 |  
 |  __init__(self, entry=None, client=None)
 |      Initialize self.  See help(type(self)) for accurate signature.
 |  
 |  add_action(self, params: dict)
 |      Add action to current playbook
 |      
 |      Parameters
 |      ----------
 |      params : dict
 |        dictionary containing attributes for action
 |      
 |      Returns
 |      -------
 |      A PlaybookAction object
 |  
 |  copy(self)
 |      Copy current playbook
 |      
 |      Parameters
 |      ----------
 |      None
 |      
 |      Returns
 |      -------
 |      A Playbook object
 |  
 |  create_item(self, params: Optional[dict] = None)
 |      Create playbook
 |      
 |      Parameters
 |      ----------
 |      params : dict
 |        dictionary containing attributes for playbook
 |      
 |      Returns
 |      -------
 |      A Playbook object
 |  
 |  delete(self)
 |      Delete current playbook
 |      
 |      Parameters
 |      ----------
 |      None
 |      
 |      Returns
 |      -------
 |      A Playbook object
 |  
 |  get_item(self, unique_id: str)
 |      Get a single playbook
 |      
 |      Parameters
 |      ----------
 |      unique_id : str
 |        unique id for the playbook
 |      
 |      Returns
 |      -------
 |      A Playbook object
 |  
 |  get_list(self)
 |      Get a list of playbooks
 |      
 |      Parameters
 |      ----------
 |      None
 |      
 |      Returns
 |      -------
 |      A list of Playbook objects
 |  
 |  list_actions(self)
 |      List actions for current playbook
 |      
 |      Parameters
 |      ----------
 |      None
 |      
 |      Returns
 |      -------
 |      A list of PlaybookAction objects
 |  
 |  remove_action(self, action: rcapi.models.exec.PlaybookAction)
 |      Remove action from current playbook
 |      
 |      Parameters
 |      ----------
 |      action : PlaybookAction
 |        PlaybookAction object
 |      
 |      Returns
 |      -------
 |      A PlaybookAction object
 |  
 |  update(self, params: dict)
 |      Update current playbook
 |      
 |      Parameters
 |      ----------
 |      params : dict
 |        dictionary containing attributes for playbook
 |      
 |      Returns
 |      -------
 |      A Playbook object
 |  
 |  ----------------------------------------------------------------------
 |  Methods inherited from rcapi.models.common.FinishedObject:
 |  
 |  to_json(self)
 |      Return data in json format
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors inherited from rcapi.models.common.FinishedObject:
 |  
 |  __dict__
 |      dictionary for instance variables (if defined)
 |  
 |  __weakref__
 |      list of weak references to the object (if defined)


Python Library Documentation: class PlaybookAction in module rcapi.models.exec

class PlaybookAction(rcapi.models.common.BaseObject)
 |  PlaybookAction(entry=None, client=None)
 |  
 |  Playbook Action object
 |  Includes Indicator
 |  
 |  Method resolution order:
 |      PlaybookAction
 |      rcapi.models.common.BaseObject
 |      rcapi.models.common.FinishedObject
 |      builtins.object
 |  
 |  Methods defined here:
 |  
 |  __init__(self, entry=None, client=None)
 |      Initialize self.  See help(type(self)) for accurate signature.
 |  
 |  update(self, params: Optional[dict] = None)
 |      Update current playbook action
 |      
 |      Parameters
 |      ----------
 |      params : dict
 |        dictionary containing attributes for playbook action
 |      
 |      Returns
 |      -------
 |      A PlaybookAction object
 |  
 |  ----------------------------------------------------------------------
 |  Methods inherited from rcapi.models.common.FinishedObject:
 |  
 |  to_json(self)
 |      Return data in json format
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors inherited from rcapi.models.common.FinishedObject:
 |  
 |  __dict__
 |      dictionary for instance variables (if defined)
 |  
 |  __weakref__
 |      list of weak references to the object (if defined)


Python Library Documentation: class PlaybookExecution in module rcapi.models.exec

class PlaybookExecution(rcapi.models.common.BaseObject)
 |  PlaybookExecution(entry)
 |  
 |  Playbook Execution object
 |  Includes Playbook, Trigger, and PortalUser
 |  
 |  Method resolution order:
 |      PlaybookExecution
 |      rcapi.models.common.BaseObject
 |      rcapi.models.common.FinishedObject
 |      builtins.object
 |  
 |  Methods defined here:
 |  
 |  __init__(self, entry)
 |      Initialize self.  See help(type(self)) for accurate signature.
 |  
 |  ----------------------------------------------------------------------
 |  Methods inherited from rcapi.models.common.FinishedObject:
 |  
 |  to_json(self)
 |      Return data in json format
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors inherited from rcapi.models.common.FinishedObject:
 |  
 |  __dict__
 |      dictionary for instance variables (if defined)
 |  
 |  __weakref__
 |      list of weak references to the object (if defined)


Python Library Documentation: class PortalUser in module rcapi.models.general

class PortalUser(rcapi.models.common.BaseObject)
 |  PortalUser(entry, type_mapping={})
 |  
 |  Portal User object
 |  
 |  Method resolution order:
 |      PortalUser
 |      rcapi.models.common.BaseObject
 |      rcapi.models.common.FinishedObject
 |      builtins.object
 |  
 |  Methods inherited from rcapi.models.common.BaseObject:
 |  
 |  __init__(self, entry, type_mapping={})
 |      Initialize self.  See help(type(self)) for accurate signature.
 |  
 |  ----------------------------------------------------------------------
 |  Methods inherited from rcapi.models.common.FinishedObject:
 |  
 |  to_json(self)
 |      Return data in json format
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors inherited from rcapi.models.common.FinishedObject:
 |  
 |  __dict__
 |      dictionary for instance variables (if defined)
 |  
 |  __weakref__
 |      list of weak references to the object (if defined)


Python Library Documentation: class SelectableObject in module rcapi.models.common

class SelectableObject(BaseObject)
 |  SelectableObject(entry, type_mapping={})
 |  
 |  A SelectableObject is a BaseObject with the ability to select a specific object from the API.
 |  
 |  Objects of this type can be called directly by the user.
 |  
 |  Method resolution order:
 |      SelectableObject
 |      BaseObject
 |      FinishedObject
 |      builtins.object
 |  
 |  Methods defined here:
 |  
 |  __init__(self, entry, type_mapping={})
 |      Initialize self.  See help(type(self)) for accurate signature.
 |  
 |  ----------------------------------------------------------------------
 |  Methods inherited from FinishedObject:
 |  
 |  to_json(self)
 |      Return data in json format
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors inherited from FinishedObject:
 |  
 |  __dict__
 |      dictionary for instance variables (if defined)
 |  
 |  __weakref__
 |      list of weak references to the object (if defined)


Python Library Documentation: class StandardErrorResponse in module rcapi.models.general

class StandardErrorResponse(rcapi.models.common.BaseObject)
 |  StandardErrorResponse(entry, type_mapping={})
 |  
 |  Standard Error Response object
 |  
 |  Method resolution order:
 |      StandardErrorResponse
 |      rcapi.models.common.BaseObject
 |      rcapi.models.common.FinishedObject
 |      builtins.object
 |  
 |  Methods inherited from rcapi.models.common.BaseObject:
 |  
 |  __init__(self, entry, type_mapping={})
 |      Initialize self.  See help(type(self)) for accurate signature.
 |  
 |  ----------------------------------------------------------------------
 |  Methods inherited from rcapi.models.common.FinishedObject:
 |  
 |  to_json(self)
 |      Return data in json format
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors inherited from rcapi.models.common.FinishedObject:
 |  
 |  __dict__
 |      dictionary for instance variables (if defined)
 |  
 |  __weakref__
 |      list of weak references to the object (if defined)


Python Library Documentation: class StandardSuccessResponse in module rcapi.models.general

class StandardSuccessResponse(rcapi.models.common.BaseObject)
 |  StandardSuccessResponse(entry, type_mapping={})
 |  
 |  Standard Success Response object
 |  
 |  Method resolution order:
 |      StandardSuccessResponse
 |      rcapi.models.common.BaseObject
 |      rcapi.models.common.FinishedObject
 |      builtins.object
 |  
 |  Methods inherited from rcapi.models.common.BaseObject:
 |  
 |  __init__(self, entry, type_mapping={})
 |      Initialize self.  See help(type(self)) for accurate signature.
 |  
 |  ----------------------------------------------------------------------
 |  Methods inherited from rcapi.models.common.FinishedObject:
 |  
 |  to_json(self)
 |      Return data in json format
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors inherited from rcapi.models.common.FinishedObject:
 |  
 |  __dict__
 |      dictionary for instance variables (if defined)
 |  
 |  __weakref__
 |      list of weak references to the object (if defined)


Python Library Documentation: class Trigger in module rcapi.models.exec

class Trigger(rcapi.models.common.SelectableObject)
 |  Trigger(entry=None, client=None)
 |  
 |  Trigger object
 |  Includes TriggerCondition
 |  
 |  Method resolution order:
 |      Trigger
 |      rcapi.models.common.SelectableObject
 |      rcapi.models.common.BaseObject
 |      rcapi.models.common.FinishedObject
 |      builtins.object
 |  
 |  Methods defined here:
 |  
 |  __init__(self, entry=None, client=None)
 |      Initialize self.  See help(type(self)) for accurate signature.
 |  
 |  add_condition(self, params: dict)
 |      Add condition to current trigger
 |      
 |      Parameters
 |      ----------
 |      params : dict
 |        dictionary containing attributes for condition
 |      
 |      Returns
 |      -------
 |      A TriggerCondition object
 |  
 |  add_playbook(self, playbook: rcapi.models.exec.Playbook)
 |      Attach playbook to current trigger
 |      
 |      Parameters
 |      ----------
 |      playbook : Playbook
 |        Playbook object
 |      
 |      Returns
 |      -------
 |      A Playbook object
 |  
 |  create_item(self, params: dict)
 |      Create trigger
 |      
 |      Parameters
 |      ----------
 |      params : dict
 |        dictionary containing attributes for trigger
 |      
 |      Returns
 |      -------
 |      A Trigger object
 |  
 |  delete(self)
 |      Delete current trigger
 |      
 |      Parameters
 |      ----------
 |      None
 |      
 |      Returns
 |      -------
 |      A Trigger object
 |  
 |  get_item(self, unique_id: str)
 |      Get a single trigger
 |      
 |      Parameters
 |      ----------
 |      unique_id : str
 |        unique id for the trigger
 |      
 |      Returns
 |      -------
 |      A Trigger object
 |  
 |  get_list(self)
 |      Get a list of triggers
 |      
 |      Parameters
 |      ----------
 |      None
 |      
 |      Returns
 |      -------
 |      A list of Trigger objects
 |  
 |  list_conditions(self)
 |      List conditions for current trigger
 |      
 |      Parameters
 |      ----------
 |      None
 |      
 |      Returns
 |      -------
 |      A list of TriggerCondition objects
 |  
 |  remove_condition(self, condition: rcapi.models.exec.TriggerCondition)
 |      Remove condition from current trigger
 |      
 |      Parameters
 |      ----------
 |      condition : TriggerCondition
 |        TriggerCondition object
 |      
 |      Returns
 |      -------
 |      A TriggerCondition object
 |  
 |  remove_playbook(self, playbook: rcapi.models.exec.Playbook)
 |      Detach playbook from current trigger
 |      
 |      Parameters
 |      ----------
 |      playbook : Playbook
 |        Playbook object
 |      
 |      Returns
 |      -------
 |      A Playbook object
 |  
 |  update(self, params: dict)
 |      Update current trigger
 |      
 |      Parameters
 |      ----------
 |      params : dict
 |        dictionary containing attributes for trigger
 |      
 |      Returns
 |      -------
 |      A Trigger object
 |  
 |  ----------------------------------------------------------------------
 |  Methods inherited from rcapi.models.common.FinishedObject:
 |  
 |  to_json(self)
 |      Return data in json format
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors inherited from rcapi.models.common.FinishedObject:
 |  
 |  __dict__
 |      dictionary for instance variables (if defined)
 |  
 |  __weakref__
 |      list of weak references to the object (if defined)


Python Library Documentation: class TriggerCondition in module rcapi.models.exec

class TriggerCondition(rcapi.models.common.BaseObject)
 |  TriggerCondition(entry, type_mapping={})
 |  
 |  Trigger Condition object
 |  
 |  Method resolution order:
 |      TriggerCondition
 |      rcapi.models.common.BaseObject
 |      rcapi.models.common.FinishedObject
 |      builtins.object
 |  
 |  Methods inherited from rcapi.models.common.BaseObject:
 |  
 |  __init__(self, entry, type_mapping={})
 |      Initialize self.  See help(type(self)) for accurate signature.
 |  
 |  ----------------------------------------------------------------------
 |  Methods inherited from rcapi.models.common.FinishedObject:
 |  
 |  to_json(self)
 |      Return data in json format
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors inherited from rcapi.models.common.FinishedObject:
 |  
 |  __dict__
 |      dictionary for instance variables (if defined)
 |  
 |  __weakref__
 |      list of weak references to the object (if defined)


Python Library Documentation: _SpecialForm in module typing

typing.Union
    Union type; Union[X, Y] means either X or Y.
    
    To define a union, use e.g. Union[int, str].  Details:
    - The arguments must be types and there must be at least one.
    - None as an argument is a special case and is replaced by
      type(None).
    - Unions of unions are flattened, e.g.::
    
        Union[Union[int, str], float] == Union[int, str, float]
    
    - Unions of a single argument vanish, e.g.::
    
        Union[int] == int  # The constructor actually returns int
    
    - Redundant arguments are skipped, e.g.::
    
        Union[int, str, int] == Union[int, str]
    
    - When comparing unions, the argument order is ignored, e.g.::
    
        Union[int, str] == Union[str, int]
    
    - You cannot subclass or instantiate a union.
    - You can use Optional[X] as a shorthand for Union[X, None].


